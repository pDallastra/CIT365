@page

@model MegaDesk.Pages.Quotes.IndexModel

@{
    ViewData["Title"] = "Index";
}

<div class="container desk-quote">
    <h2>MegaDesk Quotes</h2>

    <form asp-page="./Index" method="get">
        <div class="form-actions no-color">
            <p>
                Find by Customer Name:
                <input type="text" id="searchinput" name="SearchString" value="@Model.SearchString" />
                <input type="submit" value="Search" class="btn btn-default" /> |
                <a asp-page="./Index">Back to full List</a>
            </p>
        </div>
    </form>
    <hr>
    <table class="table quote-table">
        <thead>
            <tr>
                <th >
                    <a asp-page="./Index" asp-route-sortOrder="@Model.QuoteSort" asp-route-SearchString="@Model.SearchString">@Html.DisplayNameFor(model => model.Desk[0].name)</a>

                </th>
                <th class="hide-me">
                    @Html.DisplayNameFor(model => model.Desk[0].width)
                </th>
                <th class="hide-me">
                    @Html.DisplayNameFor(model => model.Desk[0].depth)
                </th>
                <th class="hide-me">
                    @Html.DisplayNameFor(model => model.Desk[0].numDrawers)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Desk[0].price)
                </th>
                <th class="hide-me">
                    @Html.DisplayNameFor(model => model.Desk[0].surfaceMat)
                </th>
                <th class="hide-me">
                    @Html.DisplayNameFor(model => model.Desk[0].rushOrd)
                </th>
                <th class="hide-me">
                    <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort" asp-route-SearchString="@Model.SearchString">@Html.DisplayNameFor(model => model.Desk[0].DateAdded)</a>

                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Desk)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.name)
                    </td>
                    <td class="hide-me">
                        @Html.DisplayFor(modelItem => item.width)
                    </td>
                    <td class="hide-me">
                        @Html.DisplayFor(modelItem => item.depth)
                    </td>
                    <td class="hide-me">
                        @Html.DisplayFor(modelItem => item.numDrawers)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.price)
                    </td>
                    <td class="hide-me">
                        @Html.DisplayFor(modelItem => item.surfaceMat)
                    </td>
                    <td class="hide-me">
                        @Html.DisplayFor(modelItem => item.rushOrd)
                    </td>
                    <td class="hide-me">
                        @Html.DisplayFor(modelItem => item.DateAdded)
                    </td>
                    <td>

                        <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                        <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                        <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @{
        var prevDisabled = !Model.Desk.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.Desk.HasNextPage ? "disabled" : "";
    }

    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.Desk.PageIndex - 1)"
       asp-route-currentFilter="@Model.SearchString"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.Desk.PageIndex + 1)"
       asp-route-currentFilter="@Model.SearchString"
       class="btn btn-default @nextDisabled">
        Next
    </a>
</div>